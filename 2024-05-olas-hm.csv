status,issue,title,validator comment 1,validator comment 2,validator comment 3,root cause 1,root cause 2,root cause 3,merged root cause,primary finding,proposed root cause group,,,
Satisfactory,validation-33,setFxChildTunnel Does Not Update l2TargetDispenser in PolygonDepositProcessorL1.sol (Potential Message Loss),Plausible,,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/PolygonDepositProcessorL1.sol#L91-L94,"https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/PolygonDepositProcessorL1.sol#L91-L94,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/PolygonDepositProcessorL1.sol#L98-L113,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/PolygonDepositProcessorL1.sol#L117-L120",,"https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/PolygonDepositProcessorL1.sol#L91-L94,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/PolygonDepositProcessorL1.sol#L98-L113,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/PolygonDepositProcessorL1.sol#L117-L120",validation-33,"DUPE-PolygonDepositProcessorL1-001,DUPE-PolygonDepositProcessorL1-002,DUPE-PolygonDepositProcessorL1-003",DUPE-PolygonDepositProcessorL1-001,DUPE-PolygonDepositProcessorL1-002,DUPE-PolygonDepositProcessorL1-003
Satisfactory,validation-42,Lack of support for specific tokens,Fee on transfer tokens are in scope; dup with findings-25,,fee on transfer,https://github.com/code-423n4/2024-05-olas/blob/main/registries/contracts/staking/StakingToken.sol#L108,,"https://github.com/code-423n4/2024-05-olas/blob/main/registries/contracts/staking/StakingToken.sol#L108,https://github.com/code-423n4/2024-05-olas/blob/main/registries/contracts/staking/StakingToken.sol#L125","https://github.com/code-423n4/2024-05-olas/blob/main/registries/contracts/staking/StakingToken.sol#L108,https://github.com/code-423n4/2024-05-olas/blob/main/registries/contracts/staking/StakingToken.sol#L125",validation-235,"DUPE-StakingToken-001,DUPE-StakingToken-002",DUPE-StakingToken-001,DUPE-StakingToken-002,
Satisfactory,validation-157,`stakingIncentive` is not transffered onto the next epoch which is a deviation from the spec,Plausible,,rewards stay in current epoch,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Tokenomics.sol#L1238,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Tokenomics.sol#L1238,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Tokenomics.sol#L1238,validation-157,DUPE-Tokenomics-001,,,
Satisfactory,validation-163,`timeSum` update make it impossible to update `getSum()` in the next week,Not quite the same as validation-263. Plausible,,removeNominee nextTime,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L612,,"https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L223-L249,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L586-L636","https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L586-L636,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L223-L249",validation-163,"DUPE-VoteWeighting-001,DUPE-VoteWeighting-002",DUPE-VoteWeighting-001,DUPE-VoteWeighting-002,
Satisfactory,validation-55,Desynchronized Nominee Data After Nominee Removal.,Similar to validation-285,,remove nominee,,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L621-L627,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L622-L624,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L621-L627,findings-16,DUPE-VoteWeighting-001,,,
Satisfactory,validation-29,`_sendMessage` Function in WormholeTargetDispenserL2 Does Not Handle Excess ETH Payment.,"Borderline user error, but looks valid indeed",,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/WormholeTargetDispenserL2.sol#L114-L117,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/WormholeTargetDispenserL2.sol#L114-L117,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/WormholeTargetDispenserL2.sol#L114-L117,findings-4,DUPE-WormholeTargetDispenserL2-001,,,
Unsatisfactory,validation-150,unsafe casting IDF without check,Provides no reason for an overflow to happen,,,,,,,,,,,
Unsatisfactory,validation-221,Mismatched Array Lengths in Implementation Status Update Can Cause Misconfiguration,QA at best (validation of admin function),,,,,,,,,,,
Unsatisfactory,validation-283,Insufficient Initialization Verification,Invalid: the implementation is whitelisted,,,,,,,,,,,
Unsatisfactory,validation-282,no check on return value of approve,No motivation for weird ERC20 behavior,,,,,,,,,,,
Unsatisfactory,validation-147,no check for `tp.epochPoint.rewardTreasuryFraction` to be equal to zero,No explanation of why zero is unacceptable,,,,,,,,,,,
Unsatisfactory,validation-121,Unsafe Downcasting to uint96,Provides no reason for an overflow to happen,,,,,,,,,,,
Unsatisfactory,validation-280,"use ""safetransfer"" instead of transfer","Olas is a known contract, no need for defensive logic",,,,,,,,,,,
Unsatisfactory,validation-218,Lack of Default State in getStakingState Function,"Misunderstanding of enums, Unstaked is the default state",,,,,,,,,,,
Unsatisfactory,validation-217,Incorrect Enforcement of Minimum Staking Duration,QA at best: no HM impact from the >=; likely intended behavior,,,,,,,,,,,
Unsatisfactory,validation-222,Mandatory Staking Token Verification Excludes Valid Non-OLAS Tokens,Missing proof that this is not the intended behavior - group with validation-276,,,,,,,,,,,
Unsatisfactory,validation-179,Anyone can Call the Tokenomics Checkpoint Function,"Permissionless by design, no elaboration on impact",,,,,,,,,,,
Unsatisfactory,validation-143,ERC-165 functionality is not fully implemented,"Invalid: ""contract StakingBase is ERC721TokenReceiver""",,qa,,,,,,,,,
Unsatisfactory,validation-232,Potential Overflow in Rewards Calculation within _finalizeIncentivesForUnitId Function,"Invalid: the operation is done in uint256, not uint96",,,,,,,,,,,
Unsatisfactory,validation-164,Approve on ERC-677 token is not called in `GnosisDepositProcessorL1`,Approve is done at L65 ü§¶‚Äç‚ôÇÔ∏è,,doc specs not implemented,,,,,,,,,
Unsatisfactory,validation-116,Potential for error when checking for nominee existence or removal,The finding points to code that does not exist. The implementation is equivalent to an OR,,,,,,,,,,,
Unsatisfactory,validation-96,Reentrancy vulnerabilities can lead to attackers manipulating the contract state,Reentrancy on a function without external calls ü§î,,,,,,,,,,,
Unsatisfactory,validation-16,Risk of re-org attacks,No elaboration of how frontrunning can do any harm,,,,,,,,,,,
Unsatisfactory,validation-191,unsafe approve would stop bridging of tokens,"Olas is a known contract, no need for defensive logic",,,,,,,,,,,
Unsatisfactory,validation-178,unsafe casting `l2TargetChainId` to uint16,Does not explain which of the support chains exceed the value,,,,,,,,,,,
Unsatisfactory,validation-110,Incorrect Handling of Zero Values in _sendMessage Function Leads to Unintended Reverts in ArbitrumDepositProcessorL1.sol,"maxSubmissionCostMessage and maxSubmissionCostToken are already both checked, just in different places ",,,,,,,,,,,
Unsatisfactory,validation-277,More than 18 decimals are allowed.,"""this will cause an error"" is the impact elaboration üôà",,,,,,,,,,,
Unsatisfactory,validation-281,overestimation of available rewards,The contract is free to decide how to account for donated tokens,,,,,,,,,,,
Unsatisfactory,validation-52,Inconsistent ChainId Validation in VoteWeighting Contract Can Lead to Unforeseen Behavior.,Misunderstanding: non-EVM chains have higher IDs than the EVM chains,,,,,,,,,,,
Unsatisfactory,validation-14,Use of Wrong Operator in Unstaking Condition,The warden should review boolean expression equivalences,,,,,,,,,,,
Unsatisfactory,validation-262,Reentrancy Vulnerability in StakingFactory,The warden should review what reverts do,,,,,,,,,,,
Unsatisfactory,validation-60,StakingBase Contract - Potential for Iteration Over Empty Array in evictServices.,"Nope: if the length is 5, no question those elements are there",,,,,,,,,,,
Unsatisfactory,validation-28,Potential Overflow in `getOwnerIncentives` Calculation where the multiplication of `sumUnitTopUpsOLAS` by 100 can cause an overflow.,No elaboration of how problematic values can possibly be reached,,,,,,,,,,,
Unsatisfactory,validation-54,LockEnd Misalignment and its Impact on Voting Weight Distribution.,Invalid: veOLAS.createLockFor applies the same rounding,,,,,,,,,,,
Unsatisfactory,validation-165,`ArbitrumDepositProcessorL1` uses incorrect parameter for `createRetryableTicket()`,The report is questioning about the name of a variable üôà,,gasPriceBid or maxFeePerGas,,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/ArbitrumDepositProcessorL1.sol#L191,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/ArbitrumDepositProcessorL1.sol#L191,,,,,
Unsatisfactory,validation-278,Mismatch due State Update in  reward Claim,Misunderstanding of the logic. Checkpoint then calculate is OK,,,,,,,,,,,
Unsatisfactory,validation-267,Reentrancy vulnerability in StakingNativeToken,"Dup of validation-9, both invalid",,,,,,,,,,,
Unsatisfactory,validation-58,Flawed Calculation in getNextAllowedVotingTimes,Nothing obviously wrong. Might be valid,,,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L779-L805,,,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L779-L805,,,,,
Unsatisfactory,validation-12,Lack of checking for equality to zero leads to zero slop and bias,Dup of findings-13,,,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L484,,,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L484,,,,,
Unsatisfactory,validation-287,Lack of Compatibility Checks in Implementation of Upgrades,Misunderstanding of how proxies work,,,,,,,,,,,
Unsatisfactory,validation-193,Exploitable Hash Collision Vulnerability in Retainer Account Check,Does not explain a reasonable way for a clash to happen,,,,,,,,,,,
Unsatisfactory,validation-56,Revocation Logic Leads to Unintended Weight Adjustments.,Suggested fix leads to double counting,,"looks similar to validation#284, but seems invalid",,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L586-L637,,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L586-L637,,,,,
Unsatisfactory,validation-31,"WormholeDepositProcessorL1 Can Misinterpret sourceAddress, Leading to Potential Theft",Missing proof that validating 20 bytes only is insecure,,,,,,,,,,,
Unsatisfactory,validation-194,Ineffective Reentrancy Guard in claimOwnerIncentives Function,Nope.,,,,,,,,,,,
Unsatisfactory,validation-104,Incorrect Parameter Order in getProxyAddressWithNonce for Contract Address Derivation.,"The code follows the whitepaper order, the recommended fix doesn't",,,,,,,,,,,
Unsatisfactory,validation-30,Misordered Args in `sendTokenWithPayloadToEvm`,"That's an internal function, implemented differently than the example",,,,,,,,,,,
Unsatisfactory,validation-199,Normalization Bug in `syncWithheldAmountMaintenance` Function Leads to Inaccurate Amount Syncing.,Misunderstanding of what normalization means,,"decimal
 relate to finding#26",,,,,,,,,
Unsatisfactory,validation-198,Potential Overflow Risk in syncWithheldAmount Function,No elaboration of how values can reasonably reach uint256.max,,,,,,,,,,,
Unsatisfactory,validation-144,`minStakingDuration` can be bypassed,"Contradictory. The attack prerequisite is that there are no available rewards, which makes it inconsequential",,unstake bypass min duration,,,https://github.com/code-423n4/2024-05-olas/blob/main/registries/contracts/staking/StakingBase.sol#L818,https://github.com/code-423n4/2024-05-olas/blob/main/registries/contracts/staking/StakingBase.sol#L818,,,,,
Unsatisfactory,validation-112,Improper Conversion of bytes32 to Address May Result in Loss of Staking Incentives,Does not explain how an EVM chain ID can point to a non-EVM address,,,,,,,,,,,
Unsatisfactory,validation-107,_setL2TargetDispenser Function Permanently Locks Contract by Revoking Owner Role,"Very much the intended behaviour, with a sweet multistep topping",,,,,,,,,,,
Unsatisfactory,validation-59,StakedService Contract - Potential Array Access Error During Service Eviction.,i > 0 is equivalent to i >= 1 ü§¶‚Äç‚ôÇÔ∏è,,,,,,,,,,,
Unsatisfactory,validation-204,Overflow Vulnerability in refundFromBondProgram Due to Addition Check Order.,"The sponsor commented at L815 ""This scenario is not realistically possible"" with an explanation. The report does not explain how that comment can be incorrect, and it's fishy that the comment was omitted",,,,,,,,,,,
Unsatisfactory,validation-210,Inadequate Return Data Length Check in _checkRatioPass Function Compromises Service Activity Verification and Staking Integrity,Misunderstanding: one nonce is sufficient,,,,,,,,,,,
Unsatisfactory,validation-196,Incorrect Withheld Amount Handling in `claimStakingIncentives` Function Leading to Value Loss.,Plausible,,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L1009-L1024,,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L1009-L1024,,,,,
Unsatisfactory,validation-166,The contract `OptimismTargetDispenserL2` uses incorrect `l1Processor`,Misunderstanding: that function can be called only by the wormhole relayer (L2 contract),,offset mistake,,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/OptimismTargetDispenserL2.sol#L101,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/staking/OptimismTargetDispenserL2.sol#L101,,,,,
Unsatisfactory,validation-97,integer overflows in the _addToChanges,Misunderstanding. Solidity v0.8 has overflow checks,,,,,,,,,,,
Unsatisfactory,validation-53,VoteWeighting._nomineeRelativeWeight Can Revert Due to Division by Zero,No elaboration of how totalSum can reasonably be zero and what functionality is affected in that case,,,,,,,,,,,
Unsatisfactory,validation-51,VoteWeighting.sol - Nominee Struct Leads to Data Loss and Misinterpretation.,No elaboration of how this contract can handle non-evm addresses,,,,,,,,,,,
Unsatisfactory,validation-47,Unintended Future Data Inclusion in VoteWeighting._getSum,"Intended behavior: natspec says ""return the sum for the future week""",,,,,,,,,,,
Unsatisfactory,validation-113,Incorrect Comparison Due to Improper Conversion in _checkOrderAndValues,The conversion is done only for checking uniqueness,,,,,,,,,,,
Unsatisfactory,validation-84,unauthorized revocation of voting power,The function uses msg.sender so one can't influence others' votes,,,,,,,,,,,
Unsatisfactory,validation-201,Miscalculation of rewardTreasuryFraction Due to Unenforced Sum Constraint,Missing validation on admin only function - QA at best,,,,,,,,,,,
Unsatisfactory,validation-50,Incorrect nextTime Calculation in `VoteWeighting._addNominee`.,"Likely invalid, but plausible",,,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L309,,,https://github.com/code-423n4/2024-05-olas/blob/main/governance/contracts/VoteWeighting.sol#L309,,,,,
Unsatisfactory,validation-197,Inflated Calculation of `totalReturnAmount` in `claimStakingIncentives` Due to Incorrect Decimal Handling.,Sum and then devide is equivalent to summing devided operands,,,,,,,,,,,
Unsatisfactory,validation-61,Missing Nonce Increment in _claim Function,No need for a nonce bump. Claimed rewards are removed from storage,,,,,,,,,,,
Unsatisfactory,validation-156,`stakingIncentive` parameter in Tokenomics can potentially overflow,No elaboration of how values can reasonably reach uint96.max,,impact might be limited,,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Tokenomics.sol#L835,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Tokenomics.sol#L835,,,,,
Unsatisfactory,validation-240,Stake Contract Instances can be hijacked in reorg,"The two instances would be identical, so the attacker would have only offered the transaction gas",,,,,,,,,,,
Unsatisfactory,validation-203,Underflow Vulnerability Due to Non-strict Inequality Check in reserveAmountForBondProgram Function,No underflow happens in equality case,,,,,,,,,,,
Unsatisfactory,validation-106,verifyInstance Function Incorrectly Returns True When stakingToken Check Fails,Natspec at L205 says this is an optional check,,,,,,,,,,,
Unsatisfactory,validation-101,Unstake Function Fails to Remove Service from Staked Set when Service is Present in Both serviceIds and evictServiceIds Arrays.,Plausible,,,https://github.com/code-423n4/2024-05-olas/blob/main/registries/contracts/staking/StakingBase.sol#L835-L843,,,https://github.com/code-423n4/2024-05-olas/blob/main/registries/contracts/staking/StakingBase.sol#L835-L843,,,,,
Unsatisfactory,validation-114,Inaccurate Total Transfer Amount Calculation in Dispenser.sol Due to Unupdated totalAmounts[1],"Plausible, similar to validation-196",,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L618-L624,,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L618-L624,,,,,
Unsatisfactory,validation-57,getNominee/getRemovedNominee Can Cause Out-of-Bounds Access.,"Warden did not see the ""-1"" at L746",,,,,,,,,,,
Unsatisfactory,validation-195,Unexpected State Modification in `calculateStakingIncentives` Function Due to Incorrect Usage.,The comment is just a suggestion of an alternative use,,,,,,,,,,,
Unsatisfactory,validation-206,Array Length Mismatch Vulnerability in trackServiceDonations Function.,Function called by trusted account (treasury) + no impact,,,,,,,,,,,
Unsatisfactory,validation-202,Overwriting Next Epoch Staking Parameters Without Verification,"Likely invalid, but plausible",,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Tokenomics.sol#L771-L775,,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Tokenomics.sol#L771-L775,,,,,
Unsatisfactory,validation-145,`transferAmount` is decreased before distributing rewards,Intended behavior,,transferamount should be decreased after distribution,,,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L1017,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L1017,,,,,
Unsatisfactory,validation-103,getStakingState Function Does Not Handle Case When Service tsStart is Zero and Inactivity is Within Limit,Invalid: the else is not needed because StakingStake.UNSTAKED is returned,,,,,,,,,,,
Unsatisfactory,validation-49,StakingBase Contract Susceptible to Errors Due to Uninitialized Variables.,activityChecker is trusted not to return junk,,,,,,,,,,,
Unsatisfactory,validation-32,_sendMessage in WormholeDepositProcessorL1 Can Lead to Out-of-Sync Messages Between L1 and L2,There is no external assumption that sequence numbers match 1:1 with wormhole messages,,,,,,,,,,,
Unsatisfactory,validation-261,Delegatecall to Destructed Contract in StakingProxy Fallback Function Leads to Unexpected Behavior,Implementation is trusted,,,,,,,,,,,
Unsatisfactory,validation-105,verifyInstanceAndGetEmissionsAmount Function Accesses Unverified Instance Contract,"If success is false, it does nothing and returns 0, the callers handle this case",,,,,,,,,,,
Unsatisfactory,validation-205,Zero Incentive Calculation Issue in _trackServiceDonations Function.,Rounding with dust impact,,,,,,,,,,,
Unsatisfactory,validation-200,Failure to Update Contract State on Invalid Parameter Inputs in `changeTokenomicsParameters` Function.,Invalid input in admin-only function,,,,,,,,,,,
Unsatisfactory,validation-48,VoteWeighting._getWeight Loop Can Cause Excessive Gas Costs,Gas only impact,,,,,,,,,,,
Unsatisfactory,validation-211,"Incorrect Nominee and Total Weight Updates Due to Silent Underflows, Leading to Misrepresented Voting Power and Governance Manipulation",Missing explanation of how the described situation can happen,,,,,,,,,,,
Unsatisfactory,validation-111,Uninitialized Cost Calculation in _sendMessage Function Allows Insufficient Payment When transferAmount is Zero,Does not explain how transferAmount can be zero,,,,,,,,,,,
Unsatisfactory,validation-102,calculateStakingLastReward Function Incorrectly Returns Zero for Ineligible Service Instead of Indicating Ineligibility.,QA at best. Returning reward = 0 is logically equivalent to signaling it's not eligible,,,,,,,,,,,
Unsatisfactory,validation-4,Unrestricted access to the deposit function on the StakingToken Contract,This is a joke ü§¶‚Äç‚ôÇÔ∏è,,,,,,,,,,,
Unsatisfactory,validation-123,"Reentrancy risks in the addNomineeEVM, addNomineeNonEVM, and removeNominee functions, need to follow the Checks-Effects-Interactions pattern.",Dispenser is trusted; code follows CEI,,,,,,,,,,,
Unsatisfactory,validation-62,Inconsistent Reward Distribution in _calculateStakingRewards.,No way,,,,,,,,,,,
Unsatisfactory,validation-34,Inaccurate Total Cost Calculation in OptimismTargetDispenserL2._sendMessage for Zero Token Transfers.,"Invalid: cost[0] is non-zero only ""if (transferAmount > 0)""",,,,,,,,,,,
Unsatisfactory,validation-15,Unrestricted access to the receiveWormholeMessages function in the WormholeDepositProcessorL1 contract,_receiveMessage checks the input. I love the coded PoC ü§¶‚Äç‚ôÇÔ∏è,,,,,,,,,,,
Unsatisfactory,validation-155,Incorrect calculation of `returnAmount` can lead to staking incentives being inflated in Tokenomics,Dust rounding,,return amount formula,,,"https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L913,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L918","https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L913,https://github.com/code-423n4/2024-05-olas/blob/main/tokenomics/contracts/Dispenser.sol#L918",,,,,
Unsatisfactory,validation-109,Permanent Disabling of redeem Function Due to Improper Reentrancy Guard Handling in DefaultTargetDispenserL2.sol,Misunderstanding of how reverts work,,,,,,,,,,,
Unsatisfactory,validation-27,Unprotected State Modifications in `accountOwnerIncentives` where the state is modified (rewards and top-ups cleared) for valid `unitIds` before the function reverts due to an invalid `unitId` in the input array,Misunderstanding of how reverts work,,,,,,,,,,,
Unsatisfactory,validation-129,Inheriting from OpenZeppelin‚Äôs ReentrancyGuard and using the nonReentrant modifier on the _withdraw function,Use library instead of explicit code -> QA at best,,,,,,,,,,,
Unsatisfactory,validation-248,"No access control in ""initializeTokenomics""   in  Tokenomics.sol.","Init frontrun, QA at best",,,,,,,,,,,
Unsatisfactory,validation-130,mitigate the security risks in the StakingProxy contract associated with the use of delegatecall in the fallback function,GPT generated,,,,,,,,,,,
Unsatisfactory,validation-136,adding Array Length Check in isRatioPass and Input Validation in getMultisigNonces in the StakingActivityChecker Contract,QA at best. Function will revert if the first element is not present in all arrays,,,,,,,,,,,
Unsatisfactory,validation-13,Unrestricted access to several functions in the governance VoteWeighting contract,Intended behavior. Is this dude using GPT for coded PoCs?,,,,,,,,,,,
Unsatisfactory,validation-128,Using the more standard ReentrancyGuard from OpenZeppelin for the StakingFactory.sol contract,Use library instead of explicit code -> QA at best,,,,,,,,,,,
Unsatisfactory,validation-108,Incorrect Condition for Staking: Contract Paused State Checked Inversely,Contract already handles the paused status appropriately,,,,,,,,,,,
Unsatisfactory,validation-100,Incorrect Reward Allocation when Total Rewards Exceed Available Rewards and Only One Service is Eligible.,"Invalid: when there is one service, it's intended behaviour that it receives all rewards",,,,,,,,,,,
Unsatisfactory,validation-138,Zero Value Checks: Added checks to ensure values are not zero where not expected in the _processData and redeem functions,target = address(0) -> caller error,,,,,,,,,,,
Unsatisfactory,validation-122,Looping over potentially unbounded arrays in functions like _getSum and _getWeight,Makes no sense,,,,,,,,,,,
Unsatisfactory,validation-213,Cross-Chain Transaction Failures and Irrecoverable Fund Losses to Depositors Due to Unsynchronized Pausing Mechanism,Missing proof that paused contracts revert on L2 messages,,,,,,,,,,,
Unsatisfactory,validation-131,Ensuring that serviceAgentIds in _checkTokenStakingDeposit function has a reasonable size limit to prevent gas limit issues,Self-DoS,,,,,,,,,,,
Unsatisfactory,validation-125,Applying the Checks-Effects-Interactions pattern to the functions unstake and _claim functions,GPT generated,,,,,,,,,,,
Unsatisfactory,validation-126,looping over potentially unbounded arrays in functions _calculateStakingRewards and _evict,GPT generated,,,,,,,,,,,
Unsatisfactory,validation-98,Unchecked Return Value in getNomineeWeight Function,Expected behavior,,,,,,,,,,,
Unsatisfactory,validation-137,"ensure robust input validation, preventing erroneous or malicious data from being processed by the contract",GPT generated,,,,,,,,,,,